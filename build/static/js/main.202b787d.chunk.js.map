{"version":3,"sources":["cgu_MultiButton.js","cgu_hello.js","App.js","reportWebVitals.js","index.js"],"names":["changeText","event","console","log","target","innerText","MultiButton","num","output","i","push","variant","color","onClick","CounterButton","props","state","counter","handleClick","bind","this","setState","text","Button","React","Component","styleArgument","fontSize","HelloCGU","style","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAEMA,EAAW,SAACC,GACfC,QAAQC,IAAIF,EAAMG,QAClBH,EAAMG,OAAOC,UAAYJ,EAAMG,OAAOC,UAAY,sBAUpCC,EARG,SAACC,GAElB,IADA,IAAIC,EAAO,GACHC,EAAE,EAAEA,EAAEF,EAAI,IAAIE,EACvBD,EAAOE,KAAK,eAAC,EAAD,CAAeC,QAAQ,YAAYC,MAAM,UACrDC,QAASb,EADG,mBACWS,EADX,yBAGX,OAAOD,GAGFM,E,kDACH,WAAYC,GAAO,IAAD,8BACf,cAAMA,IACDC,MAAM,CACRC,QAAQ,GAEX,EAAKC,YAAY,EAAKA,YAAYC,KAAjB,gBALF,E,+CAOlB,SAAYlB,GACTmB,KAAKC,SAAS,CAACJ,QAAQG,KAAKJ,MAAMC,QAAQ,IAC1Cf,QAAQC,IAAIiB,KAAKJ,S,oBAEpB,WACG,IAAIM,EAAKF,KAAKJ,MAAMC,QACpB,OACG,eAACM,EAAA,EAAD,CAAQV,QAASO,KAAKF,YAAaP,QAAQ,YAAYC,MAAM,UAA7D,gCACQU,EADR,iB,GAfmBE,IAAMC,WCf9BC,EAAgB,CAAEC,SAAU,QAASf,MAAO,OAInCgB,EAHA,WACd,OAAO,oBAAIC,MAAUH,EAAd,4BCYOI,MAZf,WACC,OACA,sBAAKC,UAAU,MAAf,UACA,8BACEH,MAEF,8BACEtB,EAAY,UCGA0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.202b787d.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button';\r\nimport React from 'react';\r\nconst changeText=(event)=>{\r\n   console.log(event.target)\r\n   event.target.innerText = event.target.innerText + \"被點了\"\r\n  }\r\n  const MultiButton=(num)=>{\r\n   var output=[];\r\n   for(let i=1;i<num+1;++i) {\r\n  output.push(<CounterButton variant=\"contained\" color=\"primary\" \r\n  onClick={changeText}>第{i}個按鍵</CounterButton>)\r\n  }\r\n   return output;\r\n  }\r\n  export default MultiButton;\r\n  class CounterButton extends React.Component{\r\n     constructor(props){\r\n        super(props)\r\n        this.state={\r\n           counter:0\r\n        }\r\n        this.handleClick=this.handleClick.bind(this)\r\n     }\r\n     handleClick(event){\r\n        this.setState({counter:this.state.counter+1});\r\n        console.log(this.state);\r\n     }\r\n     render(){\r\n        var text=this.state.counter;\r\n        return(\r\n           <Button onClick={this.handleClick} variant=\"contained\" color=\"primary\">\r\n              你點了 {text} 次\r\n              </Button>\r\n        );\r\n     }\r\n  }","const styleArgument = { fontSize: '100px', color: 'red' };\r\nconst HelloCGU=()=>{\r\n return <h1 style = { styleArgument } > hello CGU!! </h1>;\r\n}\r\nexport default HelloCGU;","import MultiButton from './cgu_MultiButton'\nimport HelloCGU from './cgu_hello'\nfunction App() {\n return (\n <div className=\"App\">\n <div>\n { HelloCGU() }\n </div>\n <div>\n { MultiButton(10) }\n </div>\n </div>\n );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}